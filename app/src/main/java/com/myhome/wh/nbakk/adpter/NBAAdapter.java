package com.myhome.wh.nbakk.adpter;import android.content.Context;import android.content.Intent;import android.graphics.Color;import android.net.Uri;import android.text.Spannable;import android.text.SpannableStringBuilder;import android.text.style.ForegroundColorSpan;import android.util.Log;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.Button;import android.widget.ImageView;import android.widget.TextView;import android.widget.Toast;import com.lidroid.xutils.BitmapUtils;import com.myhome.wh.nbakk.R;import com.myhome.wh.nbakk.entity.JsonBean;import java.util.ArrayList;import java.util.List;/** * Created by Administrator on 2016/3/13 0013. */public class NBAAdapter extends BaseAdapter {    List<JsonBean.ResultBean.ListBean.TrBean> tr;//数据集合    LayoutInflater layoutInflater;//反射器    BitmapUtils bitmapUtils;//图片工具    Context mContext;    NBAholder nbAholder = null;    public void setTr(List<JsonBean.ResultBean.ListBean.TrBean> tr) {        this.tr = tr;    }    //构造器    public NBAAdapter(Context context, BitmapUtils bitmapUtils) {        super();        this.layoutInflater = LayoutInflater.from(context);        tr = new ArrayList<>();//设置空白数据  不会报null        this.bitmapUtils = bitmapUtils;        this.mContext = context;//注意 根据路径传activity时的上下文    }    @Override    public int getCount() {        return tr.size();    }    @Override    public Object getItem(int position) {        return tr.get(position);    }    @Override    public long getItemId(int position) {        return position;    }    @Override    public View getView(final int position, View convertView, ViewGroup parent) {        if (convertView == null) {            convertView = layoutInflater.inflate(R.layout.list_item_fragment, null);            nbAholder = new NBAholder();            nbAholder.link1text = (TextView) convertView.findViewById(R.id.link1text);            nbAholder.link1url = (TextView) convertView.findViewById(R.id.link1url);            nbAholder.link2text = (TextView) convertView.findViewById(R.id.link2text);            nbAholder.link2url = (TextView) convertView.findViewById(R.id.link2url);            nbAholder.m_link1url = (TextView) convertView.findViewById(R.id.m_link1url);            nbAholder.m_link2url = (TextView) convertView.findViewById(R.id.m_link2url);            nbAholder.player1 = (TextView) convertView.findViewById(R.id.player1);            nbAholder.player1logo = (ImageView) convertView.findViewById(R.id.player1logo);            nbAholder.player1logobig = (ImageView) convertView.findViewById(R.id.player1logobig);            nbAholder.player1url = (TextView) convertView.findViewById(R.id.player1url);            nbAholder.player2 = (TextView) convertView.findViewById(R.id.player2);            nbAholder.player2logo = (ImageView) convertView.findViewById(R.id.player2logo);            nbAholder.player2logobig = (ImageView) convertView.findViewById(R.id.player2logobig);            nbAholder.player2url = (TextView) convertView.findViewById(R.id.player2url);            nbAholder.score = (TextView) convertView.findViewById(R.id.score);            nbAholder.status = (TextView) convertView.findViewById(R.id.status);            nbAholder.time = (TextView) convertView.findViewById(R.id.time);            convertView.setTag(nbAholder);        } else {            nbAholder = (NBAholder) convertView.getTag();        }        nbAholder.link1text.setText(tr.get(position).getLink1text());        nbAholder.link1url.setText(tr.get(position).getLink1url());        nbAholder.link2text.setText(tr.get(position).getLink2text());        nbAholder.link2url.setText(tr.get(position).getLink2url());        nbAholder.m_link1url.setText(tr.get(position).getM_link1url());        nbAholder.m_link2url.setText(tr.get(position).getM_link2url());        nbAholder.player1.setText(tr.get(position).getPlayer1());        bitmapUtils.display(nbAholder.player1logo, tr.get(position).getPlayer1logo());        bitmapUtils.display(nbAholder.player1logobig, tr.get(position).getPlayer1logobig());        nbAholder.player1url.setText(tr.get(position).getPlayer1url());        nbAholder.player2.setText(tr.get(position).getPlayer2());        bitmapUtils.display(nbAholder.player2logo, tr.get(position).getPlayer2logo());        bitmapUtils.display(nbAholder.player2logobig, tr.get(position).getPlayer2logobig());        nbAholder.player2url.setText(tr.get(position).getPlayer2url());        nbAholder.score.setText(tr.get(position).getScore());        nbAholder.status.setTextSize(tr.get(position).getStatus());        nbAholder.time.setText(tr.get(position).getTime());        //给高得分附红色字体        String score = tr.get(position).getScore();        if (score.equals("VS")) {            //排除没有对战的得分        } else {            SpannableStringBuilder style = new SpannableStringBuilder(score);            String[] split = score.split("-");            int index = score.indexOf("-");            for (int i = 0; i < split.length; i++) {                int score1 = Integer.parseInt(split[0]);                int score2 = Integer.parseInt(split[1]);                if (score1 > score2) {                    style.setSpan(new ForegroundColorSpan(Color.RED), 0, index, Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);                } else {                    style.setSpan(new ForegroundColorSpan(Color.RED), index + 1, score.length(), Spannable.SPAN_EXCLUSIVE_EXCLUSIVE);                }            }            nbAholder.score.setText(style);        }        //隐藏不需要显示的url信息        nbAholder.link1url.setVisibility(View.GONE);        nbAholder.link2url.setVisibility(View.GONE);        nbAholder.player1url.setVisibility(View.GONE);        nbAholder.player2url.setVisibility(View.GONE);        nbAholder.m_link1url.setVisibility(View.GONE);        nbAholder.m_link2url.setVisibility(View.GONE);        nbAholder.status.setVisibility(View.GONE);        nbAholder.link1text.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String link1url = tr.get(position).getLink1url();                getUrl(link1url);            }        });        nbAholder.link2text.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String link2url = tr.get(position).getLink2url();                getUrl(link2url);            }        });        nbAholder.player1logobig.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String player1url = tr.get(position).getPlayer1url() + "&cid=100000";                getUrl(player1url);            }        });        nbAholder.player2logobig.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                String player2url = tr.get(position).getPlayer2url() + "&cid=100000";                getUrl(player2url);            }        });        return convertView;    }    //根据url访问的方法    public void getUrl(String url) {        if (!url.equals("")) {//判断如果插入的赛事还未更新url为""时，避免报空指针异常做的判断            Uri uri = Uri.parse(url);            Intent it = new Intent(Intent.ACTION_VIEW, uri);            mContext.startActivity(it);        } else {            Toast.makeText(mContext, "还没有相关赛事链接", Toast.LENGTH_SHORT).show();        }    }}class NBAholder {    public TextView link1text;    public TextView link1url;    public TextView link2text;    public TextView link2url;    public TextView m_link1url;    public TextView m_link2url;    public TextView player1;    public ImageView player1logo;    public ImageView player1logobig;    public TextView player1url;    public TextView player2;    public ImageView player2logo;    public ImageView player2logobig;    public TextView player2url;    public TextView score;    public TextView status;    public TextView time;}